// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateAIAssistant;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateAccessPoint;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateBuilding;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateInteractiveScreens;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateLearningspaceType;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateLearningspaces;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateLevel;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreatePerson;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateProjector;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateUser;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.CreateWhiteboard;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.DeleteBuilding;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.DeleteLearningSpace;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.DeleteLevel;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.DeletePerson;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetAccessPointsOfLearningSpace;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetBuilding;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetBuildingofsite;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetCampusofuniversity;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetInteractiveScreenOfLearningSpace;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetLearningSpaceById;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetLearningSpaceTypeById;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetLearningSpaceTypeByLstypeid;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetLevelofbuilding;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetPersons;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetProjectorsOfLearningSpace;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetSiteofcampus;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.GetWhiteboardOfLearningSpace;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.LevelByBuilding;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.LevelById;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListAIAssistant;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListAccessPoints;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListBuildings;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListInteractiveScreens;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListLearningspaces;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListLearningspacetypes;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListProjectors;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ListWhiteboard;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ModifyAccessPoint;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ModifyLearningSpace;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ModifyLearningspaceType;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.OrganizeLevelNumbers;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.ShowActiveUsers;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.SiteProperties;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.UpdateBuilding;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.UpdateLevel;
using UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client.UpdatePerson;
namespace UCR.ECCI.IS.ExampleProject.Infrastructure.ApiClient.Client {
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    public class ApiClient : BaseRequestBuilder 
    {
        /// <summary>The createAccessPoint property</summary>
        public CreateAccessPointRequestBuilder CreateAccessPoint
        {
            get => new CreateAccessPointRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createAIAssistant property</summary>
        public CreateAIAssistantRequestBuilder CreateAIAssistant
        {
            get => new CreateAIAssistantRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createBuilding property</summary>
        public CreateBuildingRequestBuilder CreateBuilding
        {
            get => new CreateBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createInteractiveScreens property</summary>
        public CreateInteractiveScreensRequestBuilder CreateInteractiveScreens
        {
            get => new CreateInteractiveScreensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createLearningspaces property</summary>
        public CreateLearningspacesRequestBuilder CreateLearningspaces
        {
            get => new CreateLearningspacesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createLearningspaceType property</summary>
        public CreateLearningspaceTypeRequestBuilder CreateLearningspaceType
        {
            get => new CreateLearningspaceTypeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createLevel property</summary>
        public CreateLevelRequestBuilder CreateLevel
        {
            get => new CreateLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createPerson property</summary>
        public CreatePersonRequestBuilder CreatePerson
        {
            get => new CreatePersonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createProjector property</summary>
        public CreateProjectorRequestBuilder CreateProjector
        {
            get => new CreateProjectorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createUser property</summary>
        public CreateUserRequestBuilder CreateUser
        {
            get => new CreateUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createWhiteboard property</summary>
        public CreateWhiteboardRequestBuilder CreateWhiteboard
        {
            get => new CreateWhiteboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteBuilding property</summary>
        public DeleteBuildingRequestBuilder DeleteBuilding
        {
            get => new DeleteBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteLearningSpace property</summary>
        public DeleteLearningSpaceRequestBuilder DeleteLearningSpace
        {
            get => new DeleteLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteLevel property</summary>
        public DeleteLevelRequestBuilder DeleteLevel
        {
            get => new DeleteLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deletePerson property</summary>
        public DeletePersonRequestBuilder DeletePerson
        {
            get => new DeletePersonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getAccessPointsOfLearningSpace property</summary>
        public GetAccessPointsOfLearningSpaceRequestBuilder GetAccessPointsOfLearningSpace
        {
            get => new GetAccessPointsOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getBuilding property</summary>
        public GetBuildingRequestBuilder GetBuilding
        {
            get => new GetBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getBuildingofsite property</summary>
        public GetBuildingofsiteRequestBuilder GetBuildingofsite
        {
            get => new GetBuildingofsiteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getCampusofuniversity property</summary>
        public GetCampusofuniversityRequestBuilder GetCampusofuniversity
        {
            get => new GetCampusofuniversityRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getInteractiveScreenOfLearningSpace property</summary>
        public GetInteractiveScreenOfLearningSpaceRequestBuilder GetInteractiveScreenOfLearningSpace
        {
            get => new GetInteractiveScreenOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLearningSpaceById property</summary>
        public GetLearningSpaceByIdRequestBuilder GetLearningSpaceById
        {
            get => new GetLearningSpaceByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLearningSpaceTypeById property</summary>
        public GetLearningSpaceTypeByIdRequestBuilder GetLearningSpaceTypeById
        {
            get => new GetLearningSpaceTypeByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLearningSpaceTypeByLstypeid property</summary>
        public GetLearningSpaceTypeByLstypeidRequestBuilder GetLearningSpaceTypeByLstypeid
        {
            get => new GetLearningSpaceTypeByLstypeidRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLevelofbuilding property</summary>
        public GetLevelofbuildingRequestBuilder GetLevelofbuilding
        {
            get => new GetLevelofbuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getPersons property</summary>
        public GetPersonsRequestBuilder GetPersons
        {
            get => new GetPersonsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getProjectorsOfLearningSpace property</summary>
        public GetProjectorsOfLearningSpaceRequestBuilder GetProjectorsOfLearningSpace
        {
            get => new GetProjectorsOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getSiteofcampus property</summary>
        public GetSiteofcampusRequestBuilder GetSiteofcampus
        {
            get => new GetSiteofcampusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getWhiteboardOfLearningSpace property</summary>
        public GetWhiteboardOfLearningSpaceRequestBuilder GetWhiteboardOfLearningSpace
        {
            get => new GetWhiteboardOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The levelByBuilding property</summary>
        public LevelByBuildingRequestBuilder LevelByBuilding
        {
            get => new LevelByBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The levelById property</summary>
        public LevelByIdRequestBuilder LevelById
        {
            get => new LevelByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listAccessPoints property</summary>
        public ListAccessPointsRequestBuilder ListAccessPoints
        {
            get => new ListAccessPointsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listAIAssistant property</summary>
        public ListAIAssistantRequestBuilder ListAIAssistant
        {
            get => new ListAIAssistantRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listBuildings property</summary>
        public ListBuildingsRequestBuilder ListBuildings
        {
            get => new ListBuildingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listInteractiveScreens property</summary>
        public ListInteractiveScreensRequestBuilder ListInteractiveScreens
        {
            get => new ListInteractiveScreensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listLearningspaces property</summary>
        public ListLearningspacesRequestBuilder ListLearningspaces
        {
            get => new ListLearningspacesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listLearningspacetypes property</summary>
        public ListLearningspacetypesRequestBuilder ListLearningspacetypes
        {
            get => new ListLearningspacetypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listProjectors property</summary>
        public ListProjectorsRequestBuilder ListProjectors
        {
            get => new ListProjectorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listWhiteboard property</summary>
        public ListWhiteboardRequestBuilder ListWhiteboard
        {
            get => new ListWhiteboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyAccessPoint property</summary>
        public ModifyAccessPointRequestBuilder ModifyAccessPoint
        {
            get => new ModifyAccessPointRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyLearningSpace property</summary>
        public ModifyLearningSpaceRequestBuilder ModifyLearningSpace
        {
            get => new ModifyLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyLearningspaceType property</summary>
        public ModifyLearningspaceTypeRequestBuilder ModifyLearningspaceType
        {
            get => new ModifyLearningspaceTypeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The organizeLevelNumbers property</summary>
        public OrganizeLevelNumbersRequestBuilder OrganizeLevelNumbers
        {
            get => new OrganizeLevelNumbersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The showActiveUsers property</summary>
        public ShowActiveUsersRequestBuilder ShowActiveUsers
        {
            get => new ShowActiveUsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The siteProperties property</summary>
        public SitePropertiesRequestBuilder SiteProperties
        {
            get => new SitePropertiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updateBuilding property</summary>
        public UpdateBuildingRequestBuilder UpdateBuilding
        {
            get => new UpdateBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updateLevel property</summary>
        public UpdateLevelRequestBuilder UpdateLevel
        {
            get => new UpdateLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updatePerson property</summary>
        public UpdatePersonRequestBuilder UpdatePerson
        {
            get => new UpdatePersonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="ApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
        }
    }
}
