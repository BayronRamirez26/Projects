@page "/list-templates"
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations
@using System.Text
@using BlazorStrap
@using UCR.ECCI.PI.ThemePark_UCR.ApplicationWeb.LearningSpace.Services
@using UCR.ECCI.PI.ThemePark_UCR.ApplicationWeb.LearningSpace.Services.Interfaces
@using UCR.ECCI.PI.ThemePark_UCR.DomainWeb.LearningSpace.Entities;
@using UCR.ECCI.PI.ThemePark_UCR.DomainWeb.LearningSpace.Entities.Wrappers
@using UCR.ECCI.PI.ThemePark_UCR.DomainWeb.Shared.ValueObjects;
@using MudBlazor
@using System.Text.Json;
@inject NavigationManager NavigationManager;
@inject ILearningSpaceService learningSpaceService;
@inject ITemplateService templateService;
@inject HttpClient httpClient
@inject CurrentNavigationUser currentNavigationUser;


<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
<link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
<link href="css/createlearningspace.css" rel="stylesheet" />

<h1 style="color:#0C344E">Plantillas actuales</h1>
<div class="spacing"></div>

@if (Elements == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (showSuccessDeleteAlert)
    {
        <MudAlert Severity="Severity.Success" ContentAlignment="HorizontalAlignment.Center"
                  ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(true))">Éxito al borrar la plantilla</MudAlert>
    }

    @if (showFailDeleteAlert)
    {
        <MudAlert Severity="Severity.Error" ContentAlignment="HorizontalAlignment.Center"
                  ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(false))">Error la plantilla</MudAlert>
    }
    <MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" RowsPerPage="7" Filter="new Func<Templates,bool>(FilterFunc1)" Style="top:20rem;">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Plantillas</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Buscar" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="MudBlazor.Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Nombre</MudTh>
            <MudTh>Profundidad</MudTh>
            <MudTh>Altura</MudTh>
            <MudTh>Ancho</MudTh>
            <MudTh>Tipo</MudTh>
            <MudTh></MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nombre">@context.TemplateName.Value</MudTd>
            <MudTd DataLabel="Tamaño Ancho" Class="lstext-center">@context.SizeX.Value</MudTd>
            <MudTd DataLabel="Tamaño Alto" Class="lstext-center">@context.SizeY.Value</MudTd>
            <MudTd DataLabel="Tamaño Profundidad" Class="lstext-center">@context.SizeZ.Value</MudTd>
            <MudTd DataLabel="Tipo de Learning Space" Class="lstext-center"> @GetLearningSpaceTypeName(context.Type) </MudTd>
            <MudTd DataLabel="">
                @if(canModify)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Style="@($"color:{Colors.Grey.Darken2};")" @onclick="@(e => modifyTemplate(context) )"></MudIconButton>
                }
            </MudTd>
            <MudTd DataLabel="">
                @if(canDelete)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Style="@($"color:{Colors.Red.Darken2};")" @onclick="@(e => ShowModalOnSubmit(context) )"></MudIconButton>
                }
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager HideRowsPerPage />
        </PagerContent>
    </MudTable>
    <BSModal IsStaticBackdrop="true" IsCentered="true" DataId="modal2" @ref="modal">
        <Header>
            <div style="color: @colorStatus "><b>@modalTitle</b></div>
        </Header>
        <Content>
            @((MarkupString)modalContent)
            <BSValidationSummary />
        </Content>
        <Footer Context="modal">
            @if (response)
            {
                <BSButton Color="BSColor.Danger" @onclick="deleteTemplate">@acceptMessage</BSButton>
                <BSButton Color="BSColor.Secondary" @onclick="modal.HideAsync">@cancelMenssage</BSButton>
            }
        </Footer>
    </BSModal>
}

