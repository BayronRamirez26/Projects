// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.AcceptRoleToUser;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.AddBuildingObject;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.AssignPermissionToRole;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.AssignPersonToProfessor;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.AssignPersonToStudent;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.AssignRoleToUser;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.AuthorizationTest;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BoTemplatesOfPlane;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BoTemplatesOfType;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BoTemplatesOfTypeAndPlane;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BuildingDetails;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BuildingFromSite;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BuildingId;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BuildingObjectDetails;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BuildingObjectPlanes;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BuildingObjectTypes;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.BuildingObjectsFromLevel;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateAccessPoint;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateAiassistant;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateBuilding;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateInteractiveScreenFromTemplate;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateInteractivescreen;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateLearningspaceType;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateLearningspaces;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateLevel;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreatePerson;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateProjector;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateProjectorFromTemplate;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateRole;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateTemplateHasComponents;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateUser;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateWhiteboard;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.CreateWhiteboardFromTemplate;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeactivateProfessor;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeactivateStudent;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteAiassistant;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteBuilding;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteBuildingObject;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteInteractivescreen;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteLearningSpace;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteLevel;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeletePerson;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteProjector;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteRole;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteTemplate;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteTemplate_has_component;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.DeleteWhiteboards;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetAccessPointsOfLearningSpace;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetBuilding;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetBuildingofsite;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetCampusofuniversity;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetComponentsFromTemplate;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetInteractiveScreenOfLearningSpace;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetLearningSpaceById;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetLearningSpaceTypeById;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetLearningSpaceTypeByLstypeid;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetLevelofbuilding;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetPermissions;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetPersons;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetProfessor;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetProfessors;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetProjectorsOfLearningSpace;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetRoles;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetSiteofcampus;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetStudent;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetStudents;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetTemplateFromId;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetTemplate_has_components;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetTemplates;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.GetWhiteboardOfLearningSpace;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.LevelByBuilding;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.LevelById;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListAccessPoints;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListAccessPointsFromLevel;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListAiassistants;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListBoTemplates;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListBuildingObjects;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListBuildings;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListInteractivescreens;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListLearningspaces;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListLearningspacetypes;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListProjectors;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ListWhiteboards;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyAccessPoint;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyAiassistant;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyBuildingObject;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyInteractivescreen;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyLearningSpace;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyLearningspaceType;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyProjector;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ModifyWhiteboards;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.PostModifyTemplate;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.PostTemplate;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.RequestRoleToAdmin;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.ShowActiveUsers;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.SiteProperties;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.UnassignRoleToUser;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.UpdateBuilding;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.UpdateLevel;
using UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client.UpdatePerson;
namespace UCR.ECCI.PI.ThemePark_UCR.Infrastructure.ApiClient.Client {
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    public class ApiClientKiota : BaseRequestBuilder 
    {
        /// <summary>The acceptRoleToUser property</summary>
        public AcceptRoleToUserRequestBuilder AcceptRoleToUser
        {
            get => new AcceptRoleToUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The addBuildingObject property</summary>
        public AddBuildingObjectRequestBuilder AddBuildingObject
        {
            get => new AddBuildingObjectRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The assignPermissionToRole property</summary>
        public AssignPermissionToRoleRequestBuilder AssignPermissionToRole
        {
            get => new AssignPermissionToRoleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The assignPersonToProfessor property</summary>
        public AssignPersonToProfessorRequestBuilder AssignPersonToProfessor
        {
            get => new AssignPersonToProfessorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The assignPersonToStudent property</summary>
        public AssignPersonToStudentRequestBuilder AssignPersonToStudent
        {
            get => new AssignPersonToStudentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The assignRoleToUser property</summary>
        public AssignRoleToUserRequestBuilder AssignRoleToUser
        {
            get => new AssignRoleToUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The authorizationTest property</summary>
        public AuthorizationTestRequestBuilder AuthorizationTest
        {
            get => new AuthorizationTestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The boTemplatesOfPlane property</summary>
        public BoTemplatesOfPlaneRequestBuilder BoTemplatesOfPlane
        {
            get => new BoTemplatesOfPlaneRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The boTemplatesOfType property</summary>
        public BoTemplatesOfTypeRequestBuilder BoTemplatesOfType
        {
            get => new BoTemplatesOfTypeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The boTemplatesOfTypeAndPlane property</summary>
        public BoTemplatesOfTypeAndPlaneRequestBuilder BoTemplatesOfTypeAndPlane
        {
            get => new BoTemplatesOfTypeAndPlaneRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The buildingDetails property</summary>
        public BuildingDetailsRequestBuilder BuildingDetails
        {
            get => new BuildingDetailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The buildingFromSite property</summary>
        public BuildingFromSiteRequestBuilder BuildingFromSite
        {
            get => new BuildingFromSiteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The buildingId property</summary>
        public BuildingIdRequestBuilder BuildingId
        {
            get => new BuildingIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The buildingObjectDetails property</summary>
        public BuildingObjectDetailsRequestBuilder BuildingObjectDetails
        {
            get => new BuildingObjectDetailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The buildingObjectPlanes property</summary>
        public BuildingObjectPlanesRequestBuilder BuildingObjectPlanes
        {
            get => new BuildingObjectPlanesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The buildingObjectsFromLevel property</summary>
        public BuildingObjectsFromLevelRequestBuilder BuildingObjectsFromLevel
        {
            get => new BuildingObjectsFromLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The buildingObjectTypes property</summary>
        public BuildingObjectTypesRequestBuilder BuildingObjectTypes
        {
            get => new BuildingObjectTypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createAccessPoint property</summary>
        public CreateAccessPointRequestBuilder CreateAccessPoint
        {
            get => new CreateAccessPointRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createAiassistant property</summary>
        public CreateAiassistantRequestBuilder CreateAiassistant
        {
            get => new CreateAiassistantRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createBuilding property</summary>
        public CreateBuildingRequestBuilder CreateBuilding
        {
            get => new CreateBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createInteractivescreen property</summary>
        public CreateInteractivescreenRequestBuilder CreateInteractivescreen
        {
            get => new CreateInteractivescreenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createInteractiveScreenFromTemplate property</summary>
        public CreateInteractiveScreenFromTemplateRequestBuilder CreateInteractiveScreenFromTemplate
        {
            get => new CreateInteractiveScreenFromTemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createLearningspaces property</summary>
        public CreateLearningspacesRequestBuilder CreateLearningspaces
        {
            get => new CreateLearningspacesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createLearningspaceType property</summary>
        public CreateLearningspaceTypeRequestBuilder CreateLearningspaceType
        {
            get => new CreateLearningspaceTypeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createLevel property</summary>
        public CreateLevelRequestBuilder CreateLevel
        {
            get => new CreateLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createPerson property</summary>
        public CreatePersonRequestBuilder CreatePerson
        {
            get => new CreatePersonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createProjector property</summary>
        public CreateProjectorRequestBuilder CreateProjector
        {
            get => new CreateProjectorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createProjectorFromTemplate property</summary>
        public CreateProjectorFromTemplateRequestBuilder CreateProjectorFromTemplate
        {
            get => new CreateProjectorFromTemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createRole property</summary>
        public CreateRoleRequestBuilder CreateRole
        {
            get => new CreateRoleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createTemplateHasComponents property</summary>
        public CreateTemplateHasComponentsRequestBuilder CreateTemplateHasComponents
        {
            get => new CreateTemplateHasComponentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createUser property</summary>
        public CreateUserRequestBuilder CreateUser
        {
            get => new CreateUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createWhiteboard property</summary>
        public CreateWhiteboardRequestBuilder CreateWhiteboard
        {
            get => new CreateWhiteboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The createWhiteboardFromTemplate property</summary>
        public CreateWhiteboardFromTemplateRequestBuilder CreateWhiteboardFromTemplate
        {
            get => new CreateWhiteboardFromTemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deactivateProfessor property</summary>
        public DeactivateProfessorRequestBuilder DeactivateProfessor
        {
            get => new DeactivateProfessorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deactivateStudent property</summary>
        public DeactivateStudentRequestBuilder DeactivateStudent
        {
            get => new DeactivateStudentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteAiassistant property</summary>
        public DeleteAiassistantRequestBuilder DeleteAiassistant
        {
            get => new DeleteAiassistantRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteBuilding property</summary>
        public DeleteBuildingRequestBuilder DeleteBuilding
        {
            get => new DeleteBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteBuildingObject property</summary>
        public DeleteBuildingObjectRequestBuilder DeleteBuildingObject
        {
            get => new DeleteBuildingObjectRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteInteractivescreen property</summary>
        public DeleteInteractivescreenRequestBuilder DeleteInteractivescreen
        {
            get => new DeleteInteractivescreenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteLearningSpace property</summary>
        public DeleteLearningSpaceRequestBuilder DeleteLearningSpace
        {
            get => new DeleteLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteLevel property</summary>
        public DeleteLevelRequestBuilder DeleteLevel
        {
            get => new DeleteLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deletePerson property</summary>
        public DeletePersonRequestBuilder DeletePerson
        {
            get => new DeletePersonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteProjector property</summary>
        public DeleteProjectorRequestBuilder DeleteProjector
        {
            get => new DeleteProjectorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteRole property</summary>
        public DeleteRoleRequestBuilder DeleteRole
        {
            get => new DeleteRoleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteTemplate property</summary>
        public DeleteTemplateRequestBuilder DeleteTemplate
        {
            get => new DeleteTemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteTemplate_has_component property</summary>
        public DeleteTemplate_has_componentRequestBuilder DeleteTemplate_has_component
        {
            get => new DeleteTemplate_has_componentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The DeleteWhiteboards property</summary>
        public DeleteWhiteboardsRequestBuilder DeleteWhiteboards
        {
            get => new DeleteWhiteboardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getAccessPointsOfLearningSpace property</summary>
        public GetAccessPointsOfLearningSpaceRequestBuilder GetAccessPointsOfLearningSpace
        {
            get => new GetAccessPointsOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getBuilding property</summary>
        public GetBuildingRequestBuilder GetBuilding
        {
            get => new GetBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getBuildingofsite property</summary>
        public GetBuildingofsiteRequestBuilder GetBuildingofsite
        {
            get => new GetBuildingofsiteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getCampusofuniversity property</summary>
        public GetCampusofuniversityRequestBuilder GetCampusofuniversity
        {
            get => new GetCampusofuniversityRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getComponentsFromTemplate property</summary>
        public GetComponentsFromTemplateRequestBuilder GetComponentsFromTemplate
        {
            get => new GetComponentsFromTemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getInteractiveScreenOfLearningSpace property</summary>
        public GetInteractiveScreenOfLearningSpaceRequestBuilder GetInteractiveScreenOfLearningSpace
        {
            get => new GetInteractiveScreenOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLearningSpaceById property</summary>
        public GetLearningSpaceByIdRequestBuilder GetLearningSpaceById
        {
            get => new GetLearningSpaceByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLearningSpaceTypeById property</summary>
        public GetLearningSpaceTypeByIdRequestBuilder GetLearningSpaceTypeById
        {
            get => new GetLearningSpaceTypeByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLearningSpaceTypeByLstypeid property</summary>
        public GetLearningSpaceTypeByLstypeidRequestBuilder GetLearningSpaceTypeByLstypeid
        {
            get => new GetLearningSpaceTypeByLstypeidRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getLevelofbuilding property</summary>
        public GetLevelofbuildingRequestBuilder GetLevelofbuilding
        {
            get => new GetLevelofbuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getPermissions property</summary>
        public GetPermissionsRequestBuilder GetPermissions
        {
            get => new GetPermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getPersons property</summary>
        public GetPersonsRequestBuilder GetPersons
        {
            get => new GetPersonsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getProfessor property</summary>
        public GetProfessorRequestBuilder GetProfessor
        {
            get => new GetProfessorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getProfessors property</summary>
        public GetProfessorsRequestBuilder GetProfessors
        {
            get => new GetProfessorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getProjectorsOfLearningSpace property</summary>
        public GetProjectorsOfLearningSpaceRequestBuilder GetProjectorsOfLearningSpace
        {
            get => new GetProjectorsOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getRoles property</summary>
        public GetRolesRequestBuilder GetRoles
        {
            get => new GetRolesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getSiteofcampus property</summary>
        public GetSiteofcampusRequestBuilder GetSiteofcampus
        {
            get => new GetSiteofcampusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getStudent property</summary>
        public GetStudentRequestBuilder GetStudent
        {
            get => new GetStudentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getStudents property</summary>
        public GetStudentsRequestBuilder GetStudents
        {
            get => new GetStudentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getTemplate_has_components property</summary>
        public GetTemplate_has_componentsRequestBuilder GetTemplate_has_components
        {
            get => new GetTemplate_has_componentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getTemplateFromId property</summary>
        public GetTemplateFromIdRequestBuilder GetTemplateFromId
        {
            get => new GetTemplateFromIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getTemplates property</summary>
        public GetTemplatesRequestBuilder GetTemplates
        {
            get => new GetTemplatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getWhiteboardOfLearningSpace property</summary>
        public GetWhiteboardOfLearningSpaceRequestBuilder GetWhiteboardOfLearningSpace
        {
            get => new GetWhiteboardOfLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The levelByBuilding property</summary>
        public LevelByBuildingRequestBuilder LevelByBuilding
        {
            get => new LevelByBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The levelById property</summary>
        public LevelByIdRequestBuilder LevelById
        {
            get => new LevelByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listAccessPoints property</summary>
        public ListAccessPointsRequestBuilder ListAccessPoints
        {
            get => new ListAccessPointsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listAccessPointsFromLevel property</summary>
        public ListAccessPointsFromLevelRequestBuilder ListAccessPointsFromLevel
        {
            get => new ListAccessPointsFromLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listAiassistants property</summary>
        public ListAiassistantsRequestBuilder ListAiassistants
        {
            get => new ListAiassistantsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listBoTemplates property</summary>
        public ListBoTemplatesRequestBuilder ListBoTemplates
        {
            get => new ListBoTemplatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listBuildingObjects property</summary>
        public ListBuildingObjectsRequestBuilder ListBuildingObjects
        {
            get => new ListBuildingObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listBuildings property</summary>
        public ListBuildingsRequestBuilder ListBuildings
        {
            get => new ListBuildingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listInteractivescreens property</summary>
        public ListInteractivescreensRequestBuilder ListInteractivescreens
        {
            get => new ListInteractivescreensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listLearningspaces property</summary>
        public ListLearningspacesRequestBuilder ListLearningspaces
        {
            get => new ListLearningspacesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listLearningspacetypes property</summary>
        public ListLearningspacetypesRequestBuilder ListLearningspacetypes
        {
            get => new ListLearningspacetypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listProjectors property</summary>
        public ListProjectorsRequestBuilder ListProjectors
        {
            get => new ListProjectorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listWhiteboards property</summary>
        public ListWhiteboardsRequestBuilder ListWhiteboards
        {
            get => new ListWhiteboardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyAccessPoint property</summary>
        public ModifyAccessPointRequestBuilder ModifyAccessPoint
        {
            get => new ModifyAccessPointRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyAiassistant property</summary>
        public ModifyAiassistantRequestBuilder ModifyAiassistant
        {
            get => new ModifyAiassistantRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyBuildingObject property</summary>
        public ModifyBuildingObjectRequestBuilder ModifyBuildingObject
        {
            get => new ModifyBuildingObjectRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyInteractivescreen property</summary>
        public ModifyInteractivescreenRequestBuilder ModifyInteractivescreen
        {
            get => new ModifyInteractivescreenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyLearningSpace property</summary>
        public ModifyLearningSpaceRequestBuilder ModifyLearningSpace
        {
            get => new ModifyLearningSpaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyLearningspaceType property</summary>
        public ModifyLearningspaceTypeRequestBuilder ModifyLearningspaceType
        {
            get => new ModifyLearningspaceTypeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyProjector property</summary>
        public ModifyProjectorRequestBuilder ModifyProjector
        {
            get => new ModifyProjectorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modifyWhiteboards property</summary>
        public ModifyWhiteboardsRequestBuilder ModifyWhiteboards
        {
            get => new ModifyWhiteboardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The postModifyTemplate property</summary>
        public PostModifyTemplateRequestBuilder PostModifyTemplate
        {
            get => new PostModifyTemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The postTemplate property</summary>
        public PostTemplateRequestBuilder PostTemplate
        {
            get => new PostTemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The requestRoleToAdmin property</summary>
        public RequestRoleToAdminRequestBuilder RequestRoleToAdmin
        {
            get => new RequestRoleToAdminRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The showActiveUsers property</summary>
        public ShowActiveUsersRequestBuilder ShowActiveUsers
        {
            get => new ShowActiveUsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The siteProperties property</summary>
        public SitePropertiesRequestBuilder SiteProperties
        {
            get => new SitePropertiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The unassignRoleToUser property</summary>
        public UnassignRoleToUserRequestBuilder UnassignRoleToUser
        {
            get => new UnassignRoleToUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updateBuilding property</summary>
        public UpdateBuildingRequestBuilder UpdateBuilding
        {
            get => new UpdateBuildingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updateLevel property</summary>
        public UpdateLevelRequestBuilder UpdateLevel
        {
            get => new UpdateLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updatePerson property</summary>
        public UpdatePersonRequestBuilder UpdatePerson
        {
            get => new UpdatePersonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="ApiClientKiota"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiClientKiota(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
        }
    }
}
